# Loading Packages
library(tidyverse)
library(tidymodels)
library(vroom)
library(poissonreg)
library(rpart)
library(ranger)
library(stacks)
library(embed)
library(discrim)
library(naivebayes)
library(kknn)
library(kernlab)
library(themis)
library(keras)
library(bonsai)
library(lightgbm)
library(dbarts)
library(timetk)
library(modeltime)
# Reading in Data
setwd("~/Desktop/Stat348/Store-Item_Demand/")
train <- vroom("train.csv")
test <- vroom("test.csv")
test_ids <- test
test <- test %>% select(-id)
my_recipe <- recipe(sales ~ ., data = train316) %>%
step_mutate_at(all_numeric_predictors(), fn = factor) %>%
step_date(date, features="dow") %>%
step_lencode_glm(date_dow, outcome = vars(sales)) %>%
step_date(date, features="month") %>%
step_lencode_glm(date_month, outcome = vars(sales)) %>%
step_date(date, features="year") %>%
step_date(date, features="decimal") %>%
step_date(date, features="doy") %>%
step_range(date_doy, min=0, max=pi) %>%
step_mutate(sinDOY=sin(date_doy), cosDOY=cos(date_doy))
train316 <- train %>%
filter(store==3, item==16) %>%
select(-item, -store)
my_recipe <- recipe(sales ~ ., data = train316) %>%
step_mutate_at(all_numeric_predictors(), fn = factor) %>%
step_date(date, features="dow") %>%
step_lencode_glm(date_dow, outcome = vars(sales)) %>%
step_date(date, features="month") %>%
step_lencode_glm(date_month, outcome = vars(sales)) %>%
step_date(date, features="year") %>%
step_date(date, features="decimal") %>%
step_date(date, features="doy") %>%
step_range(date_doy, min=0, max=pi) %>%
step_mutate(sinDOY=sin(date_doy), cosDOY=cos(date_doy))
bake(prep(my_recipe), new_data = train316)
prophet_mod <- prophet_reg() %>%
set_engine("prophet")
View(train)
### Store 3, item 16
train316 <- train %>%
filter(store==3, item==16) %>%
select(-item, -store)
test316 <- test_ids %>%
filter(store==3, item==16) %>%
select(-item, -store)
cv_split316 <- time_series_split(train316, assess="3 months", cumulative = TRUE)
prophet_wf316 <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(prophet_mod) %>%
fit(y ~ date, data = training(cv_split316))
View(cv_split316)
View(cv_split316[["data"]])
prophet_mod <- prophet_reg() %>%
set_engine("prophet") %>%
fit(y ~ date, data = training(cv_split316))
prophet_mod <- prophet_reg() %>%
set_engine("prophet")
### Store 3, item 16
train316 <- train %>%
filter(store==3, item==16) %>%
select(-item, -store)
prophet_mod <- prophet_reg() %>%
set_engine("prophet")
### Store 3, item 16
train316 <- train %>%
filter(store==3, item==16) %>%
select(-item, -store)
test316 <- test_ids %>%
filter(store==3, item==16) %>%
select(-item, -store)
cv_split316 <- time_series_split(train316, assess="3 months", cumulative = TRUE)
prophet_wf316 <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(prophet_mod) %>%
fit(y ~ date, data = training(cv_split316))
prophet_wf316 <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(prophet_mod) %>%
fit(data = training(cv_split316))
cv_prophet_results316 <- modeltime_calibrate(prophet_wf316, new_data = testing(cv_split316))
p1 <- cv_prophet_results316 %>%
modeltime_forecast(new_data = testing(cv_split316),
actual_data = train316) %>%
plot_modeltime_forecast(.interactive=TRUE)
p1
prophet_fullfit316 <- cv_prophet_results316 %>%
modeltime_refit(data = train316)
prophet_preds316 <- prophet_fullfit316 %>%
modeltime_forecast(h = "3 months") %>%
rename(date=.index, sales=.value) %>%
select(date, sales) %>%
full_join(., y=test316, by="date") %>%
select(id, sales)
p2 <- prophet_fullfit316 %>%
modeltime_forecast(h = "3 months", actual_data = train316) %>%
plot_modeltime_forecast(.interactive=FALSE)
p2
### Store 8, item 24
train824 <- train %>%
filter(store==8, item==24) %>%
select(-item, -store)
test824 <- test_ids %>%
filter(store==8, item==24) %>%
select(-item, -store)
cv_split824 <- time_series_split(train824, assess="3 months", cumulative = TRUE)
### Store 8, item 24
train824 <- train %>%
filter(store==8, item==24) %>%
select(-item, -store)
test824 <- test_ids %>%
filter(store==8, item==24) %>%
select(-item, -store)
cv_split824 <- time_series_split(train824, assess="3 months", cumulative = TRUE)
prophet_wf824 <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(prophet_mod) %>%
fit(data = training(cv_split316))
cv_prophet_results824 <- modeltime_calibrate(prophet_wf824, new_data = testing(cv_split824))
p3 <- cv_prophet_results824 %>%
modeltime_forecast(new_data = testing(cv_split824),
actual_data = train824) %>%
plot_modeltime_forecast(.interactive=TRUE)
prophet_fullfit824 <- cv_prophet_results824 %>%
modeltime_refit(data = train824)
prophet_preds824 <- prophet_fullfit824 %>%
modeltime_forecast(h = "3 months") %>%
rename(date=.index, sales=.value) %>%
select(date, sales) %>%
full_join(., y=test824, by="date") %>%
select(id, sales)
p4 <- prophet_fullfit824 %>%
modeltime_forecast(h = "3 months", actual_data = train824) %>%
plot_modeltime_forecast(.interactive=FALSE)
plotly::subplot(p1,p2,p3,p4, nrows=2)
